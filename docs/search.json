[{"path":"https://dicook.github.io/mulgar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dianne Cook. Author, maintainer. Ursula Laa. Author.","code":""},{"path":"https://dicook.github.io/mulgar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cook D, Laa U (2025). mulgar: Functions Pre-Processing Data Multivariate Data Visualisation using Tours. R package version 1.0.5, https://github.com/dicook/mulgar, https://dicook.github.io/mulgar/.","code":"@Manual{,   title = {mulgar: Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours},   author = {Dianne Cook and Ursula Laa},   year = {2025},   note = {R package version 1.0.5, https://github.com/dicook/mulgar},   url = {https://dicook.github.io/mulgar/}, }"},{"path":"https://dicook.github.io/mulgar/index.html","id":"multivariate-graphical-analysis-in-r-mulgar","dir":"","previous_headings":"","what":"Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours","title":"Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours","text":"companion book Interactive dynamic graphics high-dimensional data using R Cook Laa. contains useful functions processing data preparation visualising tour. also several sample data sets.","code":""},{"path":"https://dicook.github.io/mulgar/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours","text":"package available CRAN. install package Github load using","code":"remotes::install_github(\"dicook/mulgar\") library(mulgar)"},{"path":"https://dicook.github.io/mulgar/index.html","id":"about-the-name","dir":"","previous_headings":"","what":"About the name","title":"Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours","text":"mulga iconic landscape Australia. woodland dominated mulga tree (Acacia aneura). travel mulga trees look regular, sometimes like stand lollipops, apparently due close neighbours clones! wood especially hardy, durable resistant pests. climate semi-arid can found across Australia, Queensland, New South Wales, South Australia Western Australia. landscape host numerous species: red kangaroos, spinifex hopping mice, mulga parrots, dunnarts, thorny devils, bearded dragons, pests like feral goats.","code":""},{"path":"https://dicook.github.io/mulgar/reference/PISA-test-scores.html","id":null,"dir":"Reference","previous_headings":"","what":"PISA scores — PISA test scores","title":"PISA scores — PISA test scores","text":"data 2018 testing, available https://webfs.oecd.org/pisa2018/SPSS_STU_QQQ.zip. subset data generated using Australian scores, simulated scores math, reading science.","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/PISA-test-scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PISA scores — PISA test scores","text":"CNT Country (AUS, IDN) PV1MATH-PV10SCIE simulated scores","code":""},{"path":"https://dicook.github.io/mulgar/reference/PISA-test-scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PISA scores — PISA test scores","text":"","code":"require(dplyr) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(pisa) pisa %>% count(CNT) #> # A tibble: 2 × 2 #>   CNT            n #>   <hvn_lbll> <int> #> 1 AUS        14273 #> 2 IDN        12098"},{"path":"https://dicook.github.io/mulgar/reference/aflw-player-statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"AFLW player statistics — aflw player statistics","title":"AFLW player statistics — aflw player statistics","text":"data 2021 Women's Australian Football League. average player statistics across season, game statistics provided fitzRoy package. new game AFL, nice explanation Wikipedia. primary analysis summarise variation using principal component analysis, gives information relationships statistics skills sets common players. One also might tempted cluster players, obvious clusters frustrating. best one partition players groups, recognising absolutely distinct separated groups.","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/aflw-player-statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AFLW player statistics — aflw player statistics","text":"id, given_name, surname, number, position, team: player identification details time_pct, ..., clearances: player statistics match","code":""},{"path":"https://dicook.github.io/mulgar/reference/aflw-player-statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AFLW player statistics — aflw player statistics","text":"","code":"require(dplyr) data(aflw) glimpse(aflw) #> Rows: 381 #> Columns: 35 #> $ id              <chr> \"CD_I1001678\", \"CD_I1001679\", \"CD_I1001681\", \"CD_I1001… #> $ given_name      <chr> \"Jordan\", \"Brianna\", \"Jodie\", \"Ebony\", \"Emma\", \"Pepa\",… #> $ surname         <chr> \"Zanchetta\", \"Green\", \"Hicks\", \"Antonio\", \"King\", \"Ran… #> $ number          <int> 2, 3, 5, 12, 60, 21, 22, 23, 35, 14, 3, 8, 16, 12, 19,… #> $ team            <chr> \"Brisbane Lions\", \"West Coast Eagles\", \"GWS Giants\", \"… #> $ position        <chr> \"INT\", \"INT\", \"HFFR\", \"WL\", \"RK\", \"BPL\", \"INT\", \"INT\",… #> $ time_pct        <dbl> 63.00000, 61.25000, 76.50000, 74.90000, 85.10000, 77.4… #> $ goals           <dbl> 0.0000000, 0.0000000, 0.0000000, 0.1000000, 0.6000000,… #> $ behinds         <dbl> 0.0000000, 0.0000000, 0.5000000, 0.4000000, 0.4000000,… #> $ kicks           <dbl> 5.000000, 2.500000, 3.750000, 8.800000, 4.100000, 3.22… #> $ handballs       <dbl> 2.500000, 3.750000, 3.000000, 3.600000, 2.700000, 2.22… #> $ disposals       <dbl> 7.500000, 6.250000, 6.750000, 12.400000, 6.800000, 5.4… #> $ marks           <dbl> 1.5000000, 0.2500000, 1.0000000, 3.7000000, 2.2000000,… #> $ bounces         <dbl> 0.0000000, 0.0000000, 0.0000000, 0.6000000, 0.1000000,… #> $ tackles         <dbl> 3.000000, 2.250000, 2.250000, 3.900000, 2.000000, 1.77… #> $ contested       <dbl> 3.500000, 2.250000, 3.500000, 5.700000, 4.400000, 2.66… #> $ uncontested     <dbl> 3.500000, 4.500000, 3.000000, 7.000000, 2.800000, 1.77… #> $ possessions     <dbl> 7.000000, 6.750000, 6.500000, 12.700000, 7.200000, 4.4… #> $ marks_in50      <dbl> 1.0000000, 0.0000000, 0.2500000, 0.5000000, 0.9000000,… #> $ contested_marks <dbl> 1.0000000, 0.0000000, 0.0000000, 0.4000000, 1.2000000,… #> $ hitouts         <dbl> 0.0000000, 0.0000000, 0.0000000, 0.0000000, 19.4000000… #> $ one_pct         <dbl> 0.0000000, 1.5000000, 0.5000000, 1.2000000, 2.6000000,… #> $ disposal        <dbl> 60.25000, 67.15000, 37.20000, 65.96000, 61.72000, 66.8… #> $ clangers        <dbl> 2.000000, 0.500000, 2.500000, 3.100000, 2.400000, 1.33… #> $ frees_for       <dbl> 1.0000000, 0.5000000, 0.2500000, 2.5000000, 0.5000000,… #> $ frees_against   <dbl> 1.0000000, 0.5000000, 1.2500000, 1.3000000, 1.1000000,… #> $ rebounds_in50   <dbl> 0.0000000, 0.5000000, 0.2500000, 1.1000000, 0.0000000,… #> $ assists         <dbl> 0.00000000, 0.00000000, 0.00000000, 0.20000000, 0.2000… #> $ accuracy        <dbl> 0.00000, 0.00000, 0.00000, 5.00000, 30.00000, 0.00000,… #> $ turnovers       <dbl> 1.500000, 1.000000, 2.500000, 4.000000, 1.700000, 1.22… #> $ intercepts      <dbl> 2.0000000, 2.0000000, 0.5000000, 5.3000000, 1.3000000,… #> $ tackles_in50    <dbl> 0.5000000, 0.0000000, 0.7500000, 0.5000000, 0.5000000,… #> $ shots           <dbl> 0.5000000, 0.0000000, 0.7500000, 1.0000000, 1.2000000,… #> $ metres          <dbl> 72.50000, 58.50000, 76.00000, 225.90000, 89.80000, 76.… #> $ clearances      <dbl> 0.5000000, 0.2500000, 1.2500000, 0.4000000, 0.9000000,…"},{"path":"https://dicook.github.io/mulgar/reference/aflw.html","id":null,"dir":"Reference","previous_headings":"","what":"AFLW player statistics — aflw","title":"AFLW player statistics — aflw","text":"data 2021 Women's Australian Football League. average player statistics across season, game statistics provided fitzRoy package. new game AFL, nice explanation Wikipedia. primary analysis summarise variation using principal component analysis, gives information relationships statistics skills sets common players. One also might tempted cluster players, obvious clusters frustrating. best one partition players groups, recognising absolutely distinct separated groups.","code":""},{"path":"https://dicook.github.io/mulgar/reference/aflw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"AFLW player statistics — aflw","text":"dataset 381 rows 35 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/aflw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AFLW player statistics — aflw","text":"id, given_name, surname, number, position, team player identification details time_pct, ..., clearances player statistics match","code":""},{"path":"https://dicook.github.io/mulgar/reference/aflw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AFLW player statistics — aflw","text":"","code":"require(dplyr) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data(aflw) glimpse(aflw) #> Rows: 381 #> Columns: 35 #> $ id              <chr> \"CD_I1001678\", \"CD_I1001679\", \"CD_I1001681\", \"CD_I1001… #> $ given_name      <chr> \"Jordan\", \"Brianna\", \"Jodie\", \"Ebony\", \"Emma\", \"Pepa\",… #> $ surname         <chr> \"Zanchetta\", \"Green\", \"Hicks\", \"Antonio\", \"King\", \"Ran… #> $ number          <int> 2, 3, 5, 12, 60, 21, 22, 23, 35, 14, 3, 8, 16, 12, 19,… #> $ team            <chr> \"Brisbane Lions\", \"West Coast Eagles\", \"GWS Giants\", \"… #> $ position        <chr> \"INT\", \"INT\", \"HFFR\", \"WL\", \"RK\", \"BPL\", \"INT\", \"INT\",… #> $ time_pct        <dbl> 63.00000, 61.25000, 76.50000, 74.90000, 85.10000, 77.4… #> $ goals           <dbl> 0.0000000, 0.0000000, 0.0000000, 0.1000000, 0.6000000,… #> $ behinds         <dbl> 0.0000000, 0.0000000, 0.5000000, 0.4000000, 0.4000000,… #> $ kicks           <dbl> 5.000000, 2.500000, 3.750000, 8.800000, 4.100000, 3.22… #> $ handballs       <dbl> 2.500000, 3.750000, 3.000000, 3.600000, 2.700000, 2.22… #> $ disposals       <dbl> 7.500000, 6.250000, 6.750000, 12.400000, 6.800000, 5.4… #> $ marks           <dbl> 1.5000000, 0.2500000, 1.0000000, 3.7000000, 2.2000000,… #> $ bounces         <dbl> 0.0000000, 0.0000000, 0.0000000, 0.6000000, 0.1000000,… #> $ tackles         <dbl> 3.000000, 2.250000, 2.250000, 3.900000, 2.000000, 1.77… #> $ contested       <dbl> 3.500000, 2.250000, 3.500000, 5.700000, 4.400000, 2.66… #> $ uncontested     <dbl> 3.500000, 4.500000, 3.000000, 7.000000, 2.800000, 1.77… #> $ possessions     <dbl> 7.000000, 6.750000, 6.500000, 12.700000, 7.200000, 4.4… #> $ marks_in50      <dbl> 1.0000000, 0.0000000, 0.2500000, 0.5000000, 0.9000000,… #> $ contested_marks <dbl> 1.0000000, 0.0000000, 0.0000000, 0.4000000, 1.2000000,… #> $ hitouts         <dbl> 0.0000000, 0.0000000, 0.0000000, 0.0000000, 19.4000000… #> $ one_pct         <dbl> 0.0000000, 1.5000000, 0.5000000, 1.2000000, 2.6000000,… #> $ disposal        <dbl> 60.25000, 67.15000, 37.20000, 65.96000, 61.72000, 66.8… #> $ clangers        <dbl> 2.000000, 0.500000, 2.500000, 3.100000, 2.400000, 1.33… #> $ frees_for       <dbl> 1.0000000, 0.5000000, 0.2500000, 2.5000000, 0.5000000,… #> $ frees_against   <dbl> 1.0000000, 0.5000000, 1.2500000, 1.3000000, 1.1000000,… #> $ rebounds_in50   <dbl> 0.0000000, 0.5000000, 0.2500000, 1.1000000, 0.0000000,… #> $ assists         <dbl> 0.00000000, 0.00000000, 0.00000000, 0.20000000, 0.2000… #> $ accuracy        <dbl> 0.00000, 0.00000, 0.00000, 5.00000, 30.00000, 0.00000,… #> $ turnovers       <dbl> 1.500000, 1.000000, 2.500000, 4.000000, 1.700000, 1.22… #> $ intercepts      <dbl> 2.0000000, 2.0000000, 0.5000000, 5.3000000, 1.3000000,… #> $ tackles_in50    <dbl> 0.5000000, 0.0000000, 0.7500000, 0.5000000, 0.5000000,… #> $ shots           <dbl> 0.5000000, 0.0000000, 0.7500000, 1.0000000, 1.2000000,… #> $ metres          <dbl> 72.50000, 58.50000, 76.00000, 225.90000, 89.80000, 76.… #> $ clearances      <dbl> 0.5000000, 0.2500000, 1.2500000, 0.4000000, 0.9000000,…"},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":null,"dir":"Reference","previous_headings":"","what":"Data sets with anomalies — anomalies","title":"Data sets with anomalies — anomalies","text":"Simulated data anomalies","code":""},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data sets with anomalies — anomalies","text":"","code":"anomaly1  anomaly2  anomaly3  anomaly4  anomaly5"},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data sets with anomalies — anomalies","text":"datasets anomalies","code":""},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data sets with anomalies — anomalies","text":"Created Di Cook.","code":""},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data sets with anomalies — anomalies","text":"x1, x2, x3, x4 numeric variables","code":""},{"path":"https://dicook.github.io/mulgar/reference/anomalies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data sets with anomalies — anomalies","text":"","code":"require(GGally) #> Loading required package: GGally #> Loading required package: ggplot2 #> Registered S3 method overwritten by 'GGally': #>   method from    #>   +.gg   ggplot2 data(anomaly1) data(anomaly2) ggscatmat(anomaly1)  ggscatmat(anomaly2)"},{"path":"https://dicook.github.io/mulgar/reference/associations.html","id":null,"dir":"Reference","previous_headings":"","what":"Data sets with different types of association — associations","title":"Data sets with different types of association — associations","text":"Simulated data various associations","code":""},{"path":"https://dicook.github.io/mulgar/reference/associations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data sets with different types of association — associations","text":"","code":"assoc1  assoc2  assoc3"},{"path":"https://dicook.github.io/mulgar/reference/associations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data sets with different types of association — associations","text":"datasets various association","code":""},{"path":"https://dicook.github.io/mulgar/reference/associations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data sets with different types of association — associations","text":"x1, x2, x3, x4 numeric variables","code":""},{"path":"https://dicook.github.io/mulgar/reference/associations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data sets with different types of association — associations","text":"","code":"require(GGally) data(assoc1) ggscatmat(assoc1)"},{"path":"https://dicook.github.io/mulgar/reference/box.html","id":null,"dir":"Reference","previous_headings":"","what":"3D plane in 5D — box","title":"3D plane in 5D — box","text":"data simulated use testing. three dimensions variability two noise. created 3 factor model. variables linearly associated.","code":""},{"path":"https://dicook.github.io/mulgar/reference/box.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"3D plane in 5D — box","text":"dataset 200 rows 5 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/box.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"3D plane in 5D — box","text":"x1, x2, x3, x4, x5 five numeric variables","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"3D plane in 5D — box","text":"","code":"box_pca <- prcomp(box) ggscree(box_pca)"},{"path":"https://dicook.github.io/mulgar/reference/bushfires.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian bushfires 2019-2020 — bushfires","title":"Australian bushfires 2019-2020 — bushfires","text":"data collated Weihao (Patrick) Li part Honours research Monash University. contains fire ignitions detected satellite hotspots, processed using spotoroo package, augmented measurements weather, vegetation, proximity human activity. cause variable predicted based historical fire ignition data collected County Fire Authority personnel.","code":""},{"path":"https://dicook.github.io/mulgar/reference/bushfires.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australian bushfires 2019-2020 — bushfires","text":"dataset 1021 rows 60 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/bushfires.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Australian bushfires 2019-2020 — bushfires","text":"id, lon, lat, time unique id, spatiotemporal information fire ignition FOR_CODE, FOR_TYPE, COVER, HEIGHT, FOREST vegetation variables rf, arf7-arf720 average rainfall, day, last 7, ..., 720 days se, ase7-ase720 solar exposure, day, last 7, ..., 720 days maxt, amaxt7-amaxt720 max temperature, day, last 7, ..., 720 days mint, amint7-amint720 min temperature, day, last 7, ..., 720 days ws, aws_m0-aws_m24 average wind speed, day, last 1-24 months dist_road, log_dist_road distance nearest road dist_cfa, log_dist_cfa distance nearest county fire authority facility dist_camp, log_dist_camp distance nearest camp site cause predicted ignition cause, accident, arson, burning_off, lightning","code":""},{"path":"https://dicook.github.io/mulgar/reference/bushfires.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Australian bushfires 2019-2020 — bushfires","text":"","code":"require(dplyr) data(bushfires) glimpse(bushfires) #> Rows: 1,021 #> Columns: 60 #> $ id            <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1… #> $ lon           <dbl> 141.1300, 141.3000, 141.4800, 147.1600, 148.1050, 144.18… #> $ lat           <dbl> -37.13000, -37.65000, -37.35000, -37.85000, -37.57999, -… #> $ time          <date> 2019-10-01, 2019-10-01, 2019-10-02, 2019-10-02, 2019-10… #> $ FOR_CODE      <dbl> 41, 41, 91, 44, 0, 44, 0, 102, 0, 91, 45, 41, 45, 45, 45… #> $ FOR_TYPE      <chr> \"Eucalypt Medium Woodland\", \"Eucalypt Medium Woodland\", … #> $ FOR_CAT       <chr> \"Native forest\", \"Native forest\", \"Commercial plantation… #> $ COVER         <dbl> 1, 1, 4, 2, 6, 2, 6, 5, 6, 4, 2, 1, 2, 2, 2, 2, 6, 6, 6,… #> $ HEIGHT        <dbl> 2, 2, 4, 2, 6, 2, 6, 5, 6, 4, 3, 2, 3, 3, 3, 2, 6, 6, 6,… #> $ FOREST        <dbl> 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,… #> $ rf            <dbl> 0.0, 0.0, 15.4, 4.8, 6.0, 11.6, 11.6, 0.6, 0.2, 0.6, 0.0… #> $ arf7          <dbl> 5.0857143, 2.4000000, 2.4000000, 0.7142857, 0.8571429, 1… #> $ arf14         <dbl> 2.8142857, 1.7428571, 1.8000000, 1.6714286, 1.5714286, 1… #> $ arf28         <dbl> 1.9785714, 1.5357143, 1.5357143, 3.7857143, 1.9000000, 1… #> $ arf60         <dbl> 2.3033333, 1.7966667, 1.7966667, 4.0000000, 2.5333333, 1… #> $ arf90         <dbl> 1.2566667, 1.0150000, 1.0150000, 2.9600000, 2.1783333, 1… #> $ arf180        <dbl> 0.9355556, 0.8444444, 0.8444444, 2.3588889, 1.7866667, 1… #> $ arf360        <dbl> 1.3644444, 1.5255556, 1.5255556, 1.7272222, 1.4716667, 1… #> $ arf720        <dbl> 1.3011111, 1.5213889, 1.5213889, 1.7111111, 1.5394444, 1… #> $ se            <dbl> 3.8, 4.6, 14.2, 23.7, 23.8, 16.8, 18.0, 12.9, 14.7, 12.9… #> $ ase7          <dbl> 18.02857, 18.50000, 21.41429, 23.08571, 23.11429, 22.014… #> $ ase14         <dbl> 17.03571, 17.44286, 18.03571, 19.17143, 18.45714, 18.628… #> $ ase28         <dbl> 19.32857, 18.47500, 19.33929, 18.23571, 16.86071, 19.375… #> $ ase60         <dbl> 20.38644, 19.99153, 20.39492, 19.90847, 19.26780, 20.449… #> $ ase90         <dbl> 22.54118, 21.93193, 22.04370, 20.59328, 20.04538, 21.809… #> $ ase180        <dbl> 20.79106, 19.93966, 19.99385, 19.11006, 18.66760, 19.810… #> $ ase360        <dbl> 15.55153, 14.83259, 14.87883, 14.69276, 14.44318, 14.755… #> $ ase720        <dbl> 15.52350, 14.75049, 14.77427, 14.53463, 14.32656, 14.540… #> $ maxt          <dbl> 21.3, 17.8, 15.4, 20.8, 19.8, 15.8, 19.5, 12.6, 18.8, 12… #> $ amaxt7        <dbl> 22.38571, 20.44286, 22.21429, 24.21429, 23.14286, 21.671… #> $ amaxt14       <dbl> 21.42857, 19.72857, 19.86429, 21.80000, 20.89286, 19.578… #> $ amaxt28       <dbl> 20.71071, 19.10000, 19.18929, 19.75000, 19.05714, 18.885… #> $ amaxt60       <dbl> 24.02667, 22.28000, 22.38667, 22.93167, 22.12000, 21.031… #> $ amaxt90       <dbl> 27.07750, 25.77667, 25.89833, 24.93667, 23.93750, 23.164… #> $ amaxt180      <dbl> 26.92000, 25.92722, 25.98500, 24.84056, 23.95389, 23.343… #> $ amaxt360      <dbl> 21.55389, 20.79778, 20.81333, 20.21972, 19.99389, 19.505… #> $ amaxt720      <dbl> 21.47750, 20.57222, 20.57694, 20.13153, 20.03875, 19.650… #> $ mint          <dbl> 9.6, 9.0, 7.3, 7.7, 8.3, 8.3, 6.1, 5.9, 7.4, 5.9, 6.9, 7… #> $ amint7        <dbl> 9.042857, 7.971429, 9.171429, 10.328571, 11.200000, 10.6… #> $ amint14       <dbl> 9.928571, 9.235714, 9.421429, 10.007143, 10.900000, 10.7… #> $ amint28       <dbl> 8.417857, 7.560714, 7.353571, 8.671429, 9.575000, 10.060… #> $ amint60       <dbl> 11.156667, 9.903333, 9.971667, 10.971667, 11.975000, 12.… #> $ amint90       <dbl> 11.96667, 10.81250, 10.87833, 12.49000, 13.46167, 13.638… #> $ amint180      <dbl> 11.96778, 11.01056, 11.02000, 12.41944, 13.42500, 13.695… #> $ amint360      <dbl> 9.130556, 8.459722, 8.448333, 9.588611, 10.456389, 11.03… #> $ amint720      <dbl> 8.854861, 8.266250, 8.254028, 9.674861, 10.517083, 10.96… #> $ dist_cfa      <dbl> 9442.206, 6322.438, 7957.374, 7790.785, 10692.055, 6054.… #> $ dist_camp     <dbl> 50966.485, 6592.893, 31767.235, 8816.272, 15339.702, 941… #> $ ws            <dbl> 1.263783, 1.263783, 1.456564, 5.424445, 4.219751, 4.1769… #> $ aws_m0        <dbl> 2.644795, 2.644795, 2.644795, 5.008369, 3.947659, 5.2316… #> $ aws_m1        <dbl> 2.559202, 2.559202, 2.559202, 5.229680, 4.027398, 4.9704… #> $ aws_m3        <dbl> 2.446211, 2.446211, 2.446211, 5.386005, 3.708622, 5.3045… #> $ aws_m6        <dbl> 2.144843, 2.144843, 2.144843, 5.132617, 3.389890, 5.0355… #> $ aws_m12       <dbl> 2.545008, 2.545008, 2.548953, 5.045297, 3.698736, 5.2341… #> $ aws_m24       <dbl> 2.580671, 2.580671, 2.584047, 5.081100, 3.745286, 5.2522… #> $ dist_road     <dbl> 498.75145, 102.22032, 1217.22446, 281.69151, 215.56176, … #> $ log_dist_cfa  <dbl> 9.152945, 8.751860, 8.981854, 8.960697, 9.277256, 8.7084… #> $ log_dist_camp <dbl> 10.838924, 8.793748, 10.366191, 9.084354, 9.638200, 9.15… #> $ log_dist_road <dbl> 6.212108, 4.627130, 7.104329, 5.640813, 5.373247, 5.0047… #> $ cause         <chr> \"lightning\", \"lightning\", \"lightning\", \"lightning\", \"lig…"},{"path":"https://dicook.github.io/mulgar/reference/c1.html","id":null,"dir":"Reference","previous_headings":"","what":"Challenge data sets — c1","title":"Challenge data sets — c1","text":"Simulated data different structure","code":""},{"path":"https://dicook.github.io/mulgar/reference/c1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Challenge data sets — c1","text":"datasets differing number rows columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/c1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Challenge data sets — c1","text":"x1, x2, ... numeric variables","code":""},{"path":"https://dicook.github.io/mulgar/reference/c1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Challenge data sets — c1","text":"","code":"require(ggplot2) #> Loading required package: ggplot2 ggplot(c1, aes(x=x1, y=x2)) +   geom_point() + theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"data matrix, compute sample variance-covariance, used compute Mahalanobis distance.","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"","code":"calc_mv_dist(x)"},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"x multivariate data set","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"vector length n","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"useful checking distance arise multivariate normal sample.","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_mv_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Mahalanobis distances between all pairs of observations — calc_mv_dist","text":"","code":"require(ggplot2) require(tibble) #> Loading required package: tibble data(aflw) aflw_std <- apply(aflw[,7:35], 2, function(x)                     (x-mean(x, na.rm=TRUE))/                      sd(x, na.rm=TRUE)) d <- calc_mv_dist(aflw_std[,c(\"goals\",\"behinds\",                                \"kicks\",\"disposals\")]) d <- as_tibble(d, .name_repair=\"minimal\") ggplot(d, aes(x=value)) + geom_histogram() #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"https://dicook.github.io/mulgar/reference/calc_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the norm of a vector — calc_norm","title":"Calculate the norm of a vector — calc_norm","text":"Returns square root sum squares vector","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the norm of a vector — calc_norm","text":"","code":"calc_norm(x)"},{"path":"https://dicook.github.io/mulgar/reference/calc_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the norm of a vector — calc_norm","text":"x numeric vector","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the norm of a vector — calc_norm","text":"numeric value","code":""},{"path":"https://dicook.github.io/mulgar/reference/calc_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the norm of a vector — calc_norm","text":"","code":"x <- rnorm(5) calc_norm(x) #> [1] 1.559919"},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster challenge data sets — clusterchallenges","title":"Cluster challenge data sets — clusterchallenges","text":"Simulated data different structures","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster challenge data sets — clusterchallenges","text":"","code":"c1  c2  c3  c4  c5  c6  c7"},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cluster challenge data sets — clusterchallenges","text":"datasets differing number rows columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cluster challenge data sets — clusterchallenges","text":"Created Di Cook.","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster challenge data sets — clusterchallenges","text":"x1, x2, ... numeric variables","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusterchallenges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster challenge data sets — clusterchallenges","text":"","code":"require(ggplot2) data(c1) ggplot(c1, aes(x=x1, y=x2)) +   geom_point() + theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Three clusters in 5D — clusters","title":"Three clusters in 5D — clusters","text":"data simulated use testing. three elliptical clusters mostly variables 2 4. equidistant.","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Three clusters in 5D — clusters","text":"dataset 300 rows 6 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Three clusters in 5D — clusters","text":"x1, x2, x3, x4, x5 five numeric variables cl class variable","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Three clusters in 5D — clusters","text":"","code":"clusters_pca <- prcomp(clusters[,1:5]) ggscree(clusters_pca)"},{"path":"https://dicook.github.io/mulgar/reference/clusters_nonlin.html","id":null,"dir":"Reference","previous_headings":"","what":"Four unusually shaped clusters in 4D — clusters_nonlin","title":"Four unusually shaped clusters in 4D — clusters_nonlin","text":"data simulated use testing. two small spherical clusters, curve cluster sine wave cluster.","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusters_nonlin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Four unusually shaped clusters in 4D — clusters_nonlin","text":"dataset 300 rows 6 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/clusters_nonlin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Four unusually shaped clusters in 4D — clusters_nonlin","text":"x1, x2, x3, x4 five numeric variables","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/clusters_nonlin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Four unusually shaped clusters in 4D — clusters_nonlin","text":"","code":"require(ggplot2) ggplot(clusters_nonlin, aes(x=x1, y=x2)) +   geom_point() +   theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/convert_proj_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"This function turns a projection sequence into a tibble — convert_proj_tibble","title":"This function turns a projection sequence into a tibble — convert_proj_tibble","text":"Take array projection sequence, turn tibble numbered projections","code":""},{"path":"https://dicook.github.io/mulgar/reference/convert_proj_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function turns a projection sequence into a tibble — convert_proj_tibble","text":"","code":"convert_proj_tibble(t1)"},{"path":"https://dicook.github.io/mulgar/reference/convert_proj_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function turns a projection sequence into a tibble — convert_proj_tibble","text":"t1 tour projection sequence","code":""},{"path":"https://dicook.github.io/mulgar/reference/convert_proj_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function turns a projection sequence into a tibble — convert_proj_tibble","text":"tbl1 tibble","code":""},{"path":"https://dicook.github.io/mulgar/reference/convert_proj_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function turns a projection sequence into a tibble — convert_proj_tibble","text":"","code":"require(tourr) #> Loading required package: tourr #>  #> Attaching package: ‘tourr’ #> The following object is masked from ‘package:GGally’: #>  #>     flea t1 <- interpolate(save_history(flea[, 1:6], grand_tour(4), max = 2)) #> Converting input data to the required matrix format. tbl1 <- convert_proj_tibble(t1) #> Warning: The `x` argument of `as_tibble.matrix()` must have unique column names if #> `.name_repair` is omitted as of tibble 2.0.0. #> ℹ Using compatibility `.name_repair`. #> ℹ The deprecated feature was likely used in the mulgar package. #>   Please report the issue at <https://github.com/dicook/mulgar/issues>."},{"path":"https://dicook.github.io/mulgar/reference/copula.html","id":null,"dir":"Reference","previous_headings":"","what":"Data sets generated using copulas — copula","title":"Data sets generated using copulas — copula","text":"Simulated data covsim, using different copula models","code":""},{"path":"https://dicook.github.io/mulgar/reference/copula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data sets generated using copulas — copula","text":"","code":"copclayton  copjoe  copfrank  copnorm"},{"path":"https://dicook.github.io/mulgar/reference/copula.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data sets generated using copulas — copula","text":"datasets various association","code":""},{"path":"https://dicook.github.io/mulgar/reference/copula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data sets generated using copulas — copula","text":"x1, x2, x3, x4, x5 numeric variables","code":""},{"path":"https://dicook.github.io/mulgar/reference/copula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data sets generated using copulas — copula","text":"","code":"require(GGally) data(copclayton) ggscatmat(copclayton)"},{"path":"https://dicook.github.io/mulgar/reference/f_gen_mvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample from a multivariate normal — f_gen_mvn","title":"Generate a sample from a multivariate normal — f_gen_mvn","text":"function generates  sample size n multivariate normal distribution","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_gen_mvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample from a multivariate normal — f_gen_mvn","text":"","code":"f_gen_mvn(n = 100, p = 5, mn = rep(0, p), vc = diag(rep(1, p)))"},{"path":"https://dicook.github.io/mulgar/reference/f_gen_mvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample from a multivariate normal — f_gen_mvn","text":"n number points generate p dimension mn mean distribution, vector length equal dimension vc vc symmetric square matrix describing variance-covariance matrix defines shape ellipse.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_gen_mvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample from a multivariate normal — f_gen_mvn","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_gen_mvn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sample from a multivariate normal — f_gen_mvn","text":"","code":"require(ggplot2) #> Loading required package: ggplot2 require(tibble) #> Loading required package: tibble d <- f_gen_mvn(n=100, p=2, mn = c(1,1), vc = matrix(c(4, 2, 2, 6), ncol=2, byrow=T)) d <- as_tibble(d) ggplot(d, aes(x = V1, y = V2)) + geom_point()"},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"data matrix, compute sample variance-covariance, used compute Mahalanobis distance.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"","code":"f_mv_dist(x)"},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"x multivariate data set","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"vector length n","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"useful checking distance arise multivariate normal sample.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_mv_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Mahalanobis distances between all pairs of observations — f_mv_dist","text":"","code":"cat(\"make an example\\n\") #> make an example"},{"path":"https://dicook.github.io/mulgar/reference/f_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the norm of a vector — f_norm","title":"Calculate the norm of a vector — f_norm","text":"Calculate norm vector","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the norm of a vector — f_norm","text":"","code":"f_norm(x)"},{"path":"https://dicook.github.io/mulgar/reference/f_norm_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise a vector to have length 1 — f_norm_vec","title":"Normalise a vector to have length 1 — f_norm_vec","text":"Normalise vector length 1","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_norm_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise a vector to have length 1 — f_norm_vec","text":"","code":"f_norm_vec(x)"},{"path":"https://dicook.github.io/mulgar/reference/f_som.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the output from SOM to display the map and data — f_som","title":"Process the output from SOM to display the map and data — f_som","text":"function generates grid points match nodes self-organising map (SOM), jitters points data can seen relative grid. allows clustering points SOM inspected.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_som.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the output from SOM to display the map and data — f_som","text":"","code":"f_som(x_som, j_val = 0.5)"},{"path":"https://dicook.github.io/mulgar/reference/f_som.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the output from SOM to display the map and data — f_som","text":"x_som object returned kohonen::som j_val amount jitter, range 0-1, default 0.3","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_som.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the output from SOM to display the map and data — f_som","text":"data object contains original variables data  map1, map2 location observations 2D som map, jittered  distance distances observations closest node  id row id data net object contains values nodes high-d space  map1, map2 nodes som net  distance distances observations closest node  id row id net edges , specifying row ids net connect lines  edges_s x, xend, y, yend segments draw lines form 2D map","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_som.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the output from SOM to display the map and data — f_som","text":"","code":"data(clusters) c_grid <- kohonen::somgrid(xdim = 5, ydim = 5,   topo = 'rectangular') c_som <- kohonen::som(as.matrix(clusters[,1:5]), grid = c_grid) c_data_net <- f_som(c_som) require(ggplot2) ggplot() +   geom_segment(data=c_data_net$edges_s,     aes(x=x, xend=xend, y=y, yend=yend)) +   geom_point(data=c_data_net$data, aes(x=map1, y=map2),     colour=\"orange\", size=2, alpha=0.5)"},{"path":"https://dicook.github.io/mulgar/reference/f_som_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the SOM net — f_som_net","title":"Generate the SOM net — f_som_net","text":"Generates edge set SOM model. Combine data matrix display model p-dimensional space.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_som_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the SOM net — f_som_net","text":"","code":"f_som_net(x_som)"},{"path":"https://dicook.github.io/mulgar/reference/f_som_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the SOM net — f_som_net","text":"x_som object returned som","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_som_net.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the SOM net — f_som_net","text":"","code":"cat(\"make an example\\n\") #> make an example"},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipse matching data center and variance — f_var_ellipse","title":"Ellipse matching data center and variance — f_var_ellipse","text":"function generates points surface ellipse center variance-covariance provided data.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipse matching data center and variance — f_var_ellipse","text":"","code":"f_var_ellipse(x, n = 100)"},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipse matching data center and variance — f_var_ellipse","text":"x multivariate data set. n number points generate","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ellipse matching data center and variance — f_var_ellipse","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ellipse matching data center and variance — f_var_ellipse","text":"useful checking equal variance-covariance assumption linear discriminant analysis.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_var_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ellipse matching data center and variance — f_var_ellipse","text":"","code":"cat(\"make an example\\n\") #> make an example"},{"path":"https://dicook.github.io/mulgar/reference/f_vc_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate points on the surface of an ellipse — f_vc_ellipse","title":"Generate points on the surface of an ellipse — f_vc_ellipse","text":"function generates points transforming points surface sphere.","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_vc_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate points on the surface of an ellipse — f_vc_ellipse","text":"","code":"f_vc_ellipse(vc, xm, n = 500)"},{"path":"https://dicook.github.io/mulgar/reference/f_vc_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate points on the surface of an ellipse — f_vc_ellipse","text":"vc symmetric square matrix describing variance-covariance matrix defines shape ellipse. xm center ellipse, vector length equal dimension vc n number points generate","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_vc_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate points on the surface of an ellipse — f_vc_ellipse","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/f_vc_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate points on the surface of an ellipse — f_vc_ellipse","text":"","code":"require(ggplot2) require(tibble) ell2d <- f_vc_ellipse(vc = matrix(c(4, 2, 2, 6), ncol=2, byrow=T), xm = c(1,1)) #> Error in sphere.hollow(p, n): could not find function \"sphere.hollow\" ell2d <- as_tibble(ell2d) #> Error in as_tibble(ell2d): object 'ell2d' not found ggplot(ell2d, aes(x = V1, y = V2)) + geom_point() #> Error in ggplot(ell2d, aes(x = V1, y = V2)): object 'ell2d' not found"},{"path":"https://dicook.github.io/mulgar/reference/gen_vc_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate points on the surface of an ellipse — gen_vc_ellipse","title":"Generate points on the surface of an ellipse — gen_vc_ellipse","text":"function generates points transforming points surface sphere.","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_vc_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate points on the surface of an ellipse — gen_vc_ellipse","text":"","code":"gen_vc_ellipse(vc, xm = rep(0, ncol(vc)), n = 500)"},{"path":"https://dicook.github.io/mulgar/reference/gen_vc_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate points on the surface of an ellipse — gen_vc_ellipse","text":"vc symmetric square matrix describing variance-covariance matrix defines shape ellipse. xm center ellipse, vector length equal dimension vc n number points generate","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_vc_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate points on the surface of an ellipse — gen_vc_ellipse","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_vc_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate points on the surface of an ellipse — gen_vc_ellipse","text":"","code":"require(ggplot2) require(tibble) ell2d <- gen_vc_ellipse(vc = matrix(c(4, 2, 2, 6),                         ncol=2, byrow=TRUE),                         xm = c(1,1)) ell2d <- as_tibble(ell2d) ggplot(ell2d, aes(x = V1, y = V2)) + geom_point() +   theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Ellipse matching data center and variance — gen_xvar_ellipse","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"function generates points surface ellipse center variance-covariance provided data.","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"","code":"gen_xvar_ellipse(x, n = 100, nstd = 1)"},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"x multivariate data set. n number points generate nstd scale factor size ellipse, terms number standard deviations","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"useful checking equal variance-covariance assumption linear discriminant analysis.","code":""},{"path":"https://dicook.github.io/mulgar/reference/gen_xvar_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ellipse matching data center and variance — gen_xvar_ellipse","text":"","code":"data(aflw) aflw_vc <- gen_xvar_ellipse(aflw[,c(\"goals\",\"behinds\",                                \"kicks\",\"disposals\")], n=500) require(ggplot2) ggplot(aflw_vc, aes(x=goals, y=behinds)) + geom_point() +   theme(aspect.ratio=1)  if (interactive()) {   require(tourr)   animate_slice(aflw_vc, rescale=TRUE, v_rel=0.02)   aflw_all <- rbind(aflw_vc, aflw[,c(\"goals\",\"behinds\",                                \"kicks\",\"disposals\")])   clrs <- c(rep(\"orange\", 500), rep(\"black\", nrow(aflw)))   animate_xy(aflw_all, col=clrs) }"},{"path":"https://dicook.github.io/mulgar/reference/ggmcbic.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces an mclust summary plot with ggplot — ggmcbic","title":"Produces an mclust summary plot with ggplot — ggmcbic","text":"Takes data returned mclustBIC(), converts tibble plotting.","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggmcbic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces an mclust summary plot with ggplot — ggmcbic","text":"","code":"ggmcbic(mc, cl = 1:nrow(mc), top = ncol(mc))"},{"path":"https://dicook.github.io/mulgar/reference/ggmcbic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produces an mclust summary plot with ggplot — ggmcbic","text":"mc mclustBIC object cl subset clusters show top number indicate many models show, default \"\"","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggmcbic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces an mclust summary plot with ggplot — ggmcbic","text":"mc_bic ggplot object","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggmcbic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces an mclust summary plot with ggplot — ggmcbic","text":"","code":"require(mclust) #> Loading required package: mclust #> Package 'mclust' version 6.1.1 #> Type 'citation(\"mclust\")' for citing this R package in publications. data(clusters) clusters_BIC <- mclustBIC(clusters[,1:5], G=2:6) ggmcbic(clusters_BIC)  ggmcbic(clusters_BIC, top=4)   data(simple_clusters) clusters_BIC <- mclustBIC(simple_clusters[,1:2]) ggmcbic(clusters_BIC, cl=2:5, top=3) #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_line()`)."},{"path":"https://dicook.github.io/mulgar/reference/ggscree.html","id":null,"dir":"Reference","previous_headings":"","what":"This function produces a simple scree plot — ggscree","title":"This function produces a simple scree plot — ggscree","text":"Takes PCA object returned prcomp(), extracts standard deviations principal components (PC), plots PC number. guidance line assumes variables standardised prior PCA.","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggscree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function produces a simple scree plot — ggscree","text":"","code":"ggscree(pc, q = 2, guide = TRUE, cumulative = FALSE)"},{"path":"https://dicook.github.io/mulgar/reference/ggscree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function produces a simple scree plot — ggscree","text":"pc PCA object q number principal components show, default 2 (change) guide logical whether compute add typical value variance, data full-dimensional cumulative logical whether draw cumulative variance","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggscree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function produces a simple scree plot — ggscree","text":"scree ggplot object","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggscree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function produces a simple scree plot — ggscree","text":"","code":"data(aflw) aflw_std <- apply(aflw[,7:35], 2, function(x)                     (x-mean(x, na.rm=TRUE))/                      sd(x, na.rm=TRUE)) aflw_pca <- prcomp(aflw_std[,c(\"goals\",\"behinds\",                                \"kicks\",\"disposals\")]) ggscree(aflw_pca, q=3)"},{"path":"https://dicook.github.io/mulgar/reference/ggslice.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an axis-parallel slice display — ggslice","title":"Generate an axis-parallel slice display — ggslice","text":"Following slice definition available tourr function returns ggplot2 display slice defined via projection onto two variables. Note underlying function works projection, axis labels need set user.","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggslice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an axis-parallel slice display — ggslice","text":"","code":"ggslice(data, h, v1 = 1, v2 = 2, center = NULL, col = NULL)"},{"path":"https://dicook.github.io/mulgar/reference/ggslice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an axis-parallel slice display — ggslice","text":"data data frame containing variables used display h slice thickness v1 column number variable mapped x-axis v2 column number variable mapped y-axis center center point vector used anchoring slice, NULL mean data used col grouping vector mapped color display","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggslice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an axis-parallel slice display — ggslice","text":"ggplot2 object showing sliced data","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/ggslice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an axis-parallel slice display — ggslice","text":"","code":"d <- geozoo::sphere.hollow(4, 1000)$points ggslice(d, 0.3, 1, 2) #> Warning: `as.tibble()` was deprecated in tibble 2.0.0. #> ℹ Please use `as_tibble()` instead. #> ℹ The signature and semantics have changed, see `?as_tibble`. #> ℹ The deprecated feature was likely used in the mulgar package. #>   Please report the issue at <https://github.com/dicook/mulgar/issues>.  ggslice(d, 0.3, 1, 2, center = c(0, 0, 0.7, 0))"},{"path":"https://dicook.github.io/mulgar/reference/ggslice_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate slice display — ggslice_projection","title":"Generate slice display — ggslice_projection","text":"Generate slice display","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggslice_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate slice display — ggslice_projection","text":"","code":"ggslice_projection(data, h, proj, center = NULL, col = NULL)"},{"path":"https://dicook.github.io/mulgar/reference/ggslice_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate slice display — ggslice_projection","text":"data data frame containing variables used display h slice thickness proj projection matrix p 2 dimensions center center point vector used anchoring slice, NULL mean data used col grouping vector mapped color display","code":""},{"path":"https://dicook.github.io/mulgar/reference/ggslice_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate slice display — ggslice_projection","text":"ggplot2 object showing sliced data","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/ggslice_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate slice display — ggslice_projection","text":"","code":"d <- geozoo::sphere.hollow(4, 1000)$points ggslice_projection(d, 0.3, tourr::basis_random(4))  ggslice_projection(d, 0.3, tourr::basis_random(4),                    center = c(0.4, 0.4, 0.4, 0.4))"},{"path":"https://dicook.github.io/mulgar/reference/hierfly.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dendrogram to be added to data — hierfly","title":"Generate a dendrogram to be added to data — hierfly","text":"Supplements data set information needed draw dendrogram. Intermediate cluster nodes added needed, positioned centroid combined clusters. Note categorical variables need factors.","code":""},{"path":"https://dicook.github.io/mulgar/reference/hierfly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dendrogram to be added to data — hierfly","text":"","code":"hierfly(data, h = NULL, metric = \"euclidean\", method = \"ward.D2\", scale = TRUE)"},{"path":"https://dicook.github.io/mulgar/reference/hierfly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dendrogram to be added to data — hierfly","text":"data data set h hclust object metric distance metric use, see dist list possibilities method cluster distance measure use, see hclust details scale logical value whether scale data , default TRUE","code":""},{"path":"https://dicook.github.io/mulgar/reference/hierfly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a dendrogram to be added to data — hierfly","text":"list data edges segments","code":""},{"path":"https://dicook.github.io/mulgar/reference/hierfly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a dendrogram to be added to data — hierfly","text":"","code":"data(clusters) cl_dist <- dist(clusters[,1:5]) cl_hw <- hclust(cl_dist, method=\"ward.D2\") require(ggdendro) #> Loading required package: ggdendro ggdendrogram(cl_hw, type = \"triangle\", labels = FALSE)  clusters$clw <- factor(cutree(cl_hw, 3)) cl_hfly <- hierfly(clusters, cl_hw, scale=FALSE) if (interactive()) {   require(tourr)   glyphs <- c(16, 46)   pch <- glyphs[cl_hfly$data$node+1]   require(colorspace)   clrs <- heat_hcl(length(unique(cl_hfly$data$clw)))   pcol <- clrs[cl_hfly$data$clw]   ecol <- clrs[cl_hfly$data$clw[cl_hfly$edges[,1]]]   animate_xy(cl_hfly$data[,1:5], edges=cl_hfly$edges,     col=pcol, pch=pch, edges.col=ecol,     axes=\"bottomleft\") }"},{"path":"https://dicook.github.io/mulgar/reference/mc_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the ellipses of an mclust model — mc_ellipse","title":"Computes the ellipses of an mclust model — mc_ellipse","text":"Takes data returned Mclust(), extracts parameter estimates, computes points ellipses.","code":""},{"path":"https://dicook.github.io/mulgar/reference/mc_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the ellipses of an mclust model — mc_ellipse","text":"","code":"mc_ellipse(mc, npts = 100)"},{"path":"https://dicook.github.io/mulgar/reference/mc_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the ellipses of an mclust model — mc_ellipse","text":"mc Mclust object npts Number points simulate cluster, default 100","code":""},{"path":"https://dicook.github.io/mulgar/reference/mc_ellipse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the ellipses of an mclust model — mc_ellipse","text":"mc_ellipses data frame","code":""},{"path":"https://dicook.github.io/mulgar/reference/mc_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the ellipses of an mclust model — mc_ellipse","text":"","code":"require(mclust) data(simple_clusters) clusters_mc <- Mclust(simple_clusters[,1:2],                      G=2,                      modelname=\"EEI\") mce <- mc_ellipse(clusters_mc, npts=400) require(ggplot2) sc <- simple_clusters sc$cl <- factor(clusters_mc$classification) ggplot() +   geom_point(data=sc, aes(x=x1, y=x2, colour=cl)) +   geom_point(data=mce$ell, aes(x=x1, y=x2, colour=cl), shape=4) +   geom_point(data=mce$mn, aes(x=x1, y=x2, colour=cl), shape=3) +   theme(aspect.ratio=1, legend.position=\"none\")"},{"path":"https://dicook.github.io/mulgar/reference/mulgar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mulgar: Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours — mulgar-package","title":"mulgar: Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours — mulgar-package","text":"companion book Cook, D. Laa, U. (2023) https://dicook.github.io/mulgar_book/ \"Interactively exploring high-dimensional data models R\". Cook Laa. contains useful functions processing data preparation visualising tour. also several sample data sets.","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/mulgar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mulgar: Functions for Pre-Processing Data for Multivariate Data Visualisation using Tours — mulgar-package","text":"Maintainer: Dianne Cook dicook@monash.edu (ORCID) Authors: Ursula Laa ursula.laa@boku.ac.(ORCID)","code":""},{"path":"https://dicook.github.io/mulgar/reference/multicluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple clusters of different sizes, shapes and distance from each other — multicluster","title":"Multiple clusters of different sizes, shapes and distance from each other — multicluster","text":"data originally http://ifs.tuwien.ac./dm/download/multiChallenge-matrix.txt, provided challenge non-linear dimension reduction.used example Lee, Laa, Cook (2023) https://doi.org/10.52933/jdssv.v2i3.","code":""},{"path":"https://dicook.github.io/mulgar/reference/multicluster.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Multiple clusters of different sizes, shapes and distance from each other — multicluster","text":"dataset 400 rows 11 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/multicluster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multiple clusters of different sizes, shapes and distance from each other — multicluster","text":"group cluster label x1, ... x10 numeric variables","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/multicluster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple clusters of different sizes, shapes and distance from each other — multicluster","text":"","code":"require(ggplot2) ggplot(multicluster, aes(x=x1, y=x2)) +   geom_point() + theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/norm_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise a vector to have length 1 — norm_vec","title":"Normalise a vector to have length 1 — norm_vec","text":"Returns normalised vector, sum squares equal 1","code":""},{"path":"https://dicook.github.io/mulgar/reference/norm_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise a vector to have length 1 — norm_vec","text":"","code":"norm_vec(x)"},{"path":"https://dicook.github.io/mulgar/reference/norm_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalise a vector to have length 1 — norm_vec","text":"x numeric vector","code":""},{"path":"https://dicook.github.io/mulgar/reference/norm_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise a vector to have length 1 — norm_vec","text":"numeric vector","code":""},{"path":"https://dicook.github.io/mulgar/reference/norm_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalise a vector to have length 1 — norm_vec","text":"","code":"x <- rnorm(5) norm_vec(x) #> [1] -0.595680329 -0.708343079  0.009961467 -0.312049764  0.214337916"},{"path":"https://dicook.github.io/mulgar/reference/pca_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create wire frame of PCA model — pca_model","title":"Create wire frame of PCA model — pca_model","text":"function takes PCA produces wire frame PCA examine data tour. purpose see well variance explained. model centered mean, extend 3 SDs towards edge data, assuming data standardised.","code":""},{"path":"https://dicook.github.io/mulgar/reference/pca_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create wire frame of PCA model — pca_model","text":"","code":"pca_model(pc, d = 2, s = 1)"},{"path":"https://dicook.github.io/mulgar/reference/pca_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create wire frame of PCA model — pca_model","text":"pc PCA object d number dimensions use, default=2 s scale model, default=1","code":""},{"path":"https://dicook.github.io/mulgar/reference/pca_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create wire frame of PCA model — pca_model","text":"list points edges","code":""},{"path":"https://dicook.github.io/mulgar/reference/pca_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create wire frame of PCA model — pca_model","text":"","code":"data(plane) plane_pca <- prcomp(plane) plane_m <- pca_model(plane_pca) plane_m_d <- rbind(plane_m$points, plane) if (interactive()) {   require(tourr)   animate_xy(plane_m_d, edges=plane_m$edges, axes=\"bottomleft\") }"},{"path":"https://dicook.github.io/mulgar/reference/pisa.html","id":null,"dir":"Reference","previous_headings":"","what":"PISA scores — pisa","title":"PISA scores — pisa","text":"data 2018 testing, available https://webfs.oecd.org/pisa2018/SPSS_STU_QQQ.zip. subset data containing samples Australia Indonesia, simulated scores math, reading science.","code":""},{"path":"https://dicook.github.io/mulgar/reference/pisa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"PISA scores — pisa","text":"data set 10548 rows 31 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/pisa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PISA scores — pisa","text":"CNT Country (Australia, Indonesia) PV1MATH-PV10SCIE simulated scores math, reading science","code":""},{"path":"https://dicook.github.io/mulgar/reference/pisa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PISA scores — pisa","text":"","code":"require(dplyr) data(pisa) pisa |> count(CNT) #> # A tibble: 2 × 2 #> # Groups:   CNT [2] #>   CNT           n #>   <fct>     <int> #> 1 Indonesia  4839 #> 2 Australia  5709"},{"path":"https://dicook.github.io/mulgar/reference/plane.html","id":null,"dir":"Reference","previous_headings":"","what":"2D plane in 5D — plane","title":"2D plane in 5D — plane","text":"data simulated use testing. two dimensions variability three noise. created 2 factor model, variables related.","code":""},{"path":"https://dicook.github.io/mulgar/reference/plane.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"2D plane in 5D — plane","text":"data set 100 rows 5 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/plane.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2D plane in 5D — plane","text":"x1, x2, x3, x4, x5 five numeric variables","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/plane.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"2D plane in 5D — plane","text":"","code":"plane_pca <- prcomp(plane) ggscree(plane_pca)"},{"path":"https://dicook.github.io/mulgar/reference/plane_nonlin.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-linear relationship in 5D — plane_nonlin","title":"Non-linear relationship in 5D — plane_nonlin","text":"data simulated use testing. three dimensions variability two noise. created 2 factor non-linear model. variables associated.","code":""},{"path":"https://dicook.github.io/mulgar/reference/plane_nonlin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Non-linear relationship in 5D — plane_nonlin","text":"dataset 100 rows 5 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/plane_nonlin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Non-linear relationship in 5D — plane_nonlin","text":"x1, x2, x3, x4, x5 five numeric variables","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/plane_nonlin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-linear relationship in 5D — plane_nonlin","text":"","code":"plane_nonlin_pca <- prcomp(plane_nonlin) ggscree(plane_nonlin_pca)"},{"path":"https://dicook.github.io/mulgar/reference/pooled_vc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute pooled variance-covariance matrix — pooled_vc","title":"Compute pooled variance-covariance matrix — pooled_vc","text":"function computes group variance-covariance matrices, produces weighted average. useful examining linear discriminant analysis model.","code":""},{"path":"https://dicook.github.io/mulgar/reference/pooled_vc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute pooled variance-covariance matrix — pooled_vc","text":"","code":"pooled_vc(x, cl, prior = rep(1/length(unique(cl)), length(unique(cl))))"},{"path":"https://dicook.github.io/mulgar/reference/pooled_vc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute pooled variance-covariance matrix — pooled_vc","text":"x multivariate data set, matrix. cl class variable prior prior probability class, must sum 1, default equal","code":""},{"path":"https://dicook.github.io/mulgar/reference/pooled_vc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute pooled variance-covariance matrix — pooled_vc","text":"matrix","code":""},{"path":"https://dicook.github.io/mulgar/reference/pooled_vc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute pooled variance-covariance matrix — pooled_vc","text":"","code":"data(clusters) pooled_vc(clusters[,1:5], clusters$cl) #>             x1           x2          x3           x4           x5 #> x1  0.99999333 -0.011761538  0.03090888  0.039326651  0.020667963 #> x2 -0.01176154  0.065410181 -0.01087632  0.001238853  0.007879633 #> x3  0.03090888 -0.010876321  0.48526224 -0.012003440  0.022479828 #> x4  0.03932665  0.001238853 -0.01200344  0.178607342 -0.012844319 #> x5  0.02066796  0.007879633  0.02247983 -0.012844319  0.513469244"},{"path":"https://dicook.github.io/mulgar/reference/rmvn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sample from a multivariate normal — rmvn","title":"Generate a sample from a multivariate normal — rmvn","text":"function generates  sample size n multivariate normal distribution","code":""},{"path":"https://dicook.github.io/mulgar/reference/rmvn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sample from a multivariate normal — rmvn","text":"","code":"rmvn(n = 100, p = 5, mn = rep(0, p), vc = diag(rep(1, p)))"},{"path":"https://dicook.github.io/mulgar/reference/rmvn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sample from a multivariate normal — rmvn","text":"n number points generate p dimension mn mean distribution, vector length equal dimension vc vc symmetric square matrix describing variance-covariance matrix defines shape ellipse.","code":""},{"path":"https://dicook.github.io/mulgar/reference/rmvn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sample from a multivariate normal — rmvn","text":"matrix size n x p","code":""},{"path":"https://dicook.github.io/mulgar/reference/rmvn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sample from a multivariate normal — rmvn","text":"","code":"require(ggplot2) d <- mulgar::rmvn(n=100, p=2, mn = c(1,1),                   vc = matrix(c(4, 2, 2, 6),                          ncol=2, byrow=TRUE)) ggplot(data.frame(d), aes(x = x1, y = x2)) +   geom_point() + theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/simple_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Two clusters in 2D — simple_clusters","title":"Two clusters in 2D — simple_clusters","text":"data simulated use testing. two spherical clusters, two variables.","code":""},{"path":"https://dicook.github.io/mulgar/reference/simple_clusters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Two clusters in 2D — simple_clusters","text":"dataset 137 rows 3 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/simple_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two clusters in 2D — simple_clusters","text":"x1, x2 two numeric variables cl class variable","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/simple_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two clusters in 2D — simple_clusters","text":"","code":"require(ggplot2) ggplot(simple_clusters, aes(x=x1, y=x2)) +   geom_point() + theme(aspect.ratio=1)"},{"path":"https://dicook.github.io/mulgar/reference/sketches_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Images of sketches for testing — sketches_test","title":"Images of sketches for testing — sketches_test","text":"data subset images https://quickdraw.withgoogle.com subset created using quickdraw R package https://huizezhang-sherry.github.io/quickdraw/. 6 different groups: banana, boomerang, cactus, flip flops, kangaroo. image 28x28 pixels.","code":""},{"path":"https://dicook.github.io/mulgar/reference/sketches_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Images of sketches for testing — sketches_test","text":"data frame 1200 rows 786 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/sketches_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Images of sketches for testing — sketches_test","text":"V1-V784 grey scale 0-255 word NA, need predict id unique id sketch","code":""},{"path":[]},{"path":"https://dicook.github.io/mulgar/reference/sketches_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Images of sketches for testing — sketches_test","text":"","code":"require(ggplot2) data(\"sketches_test\") x <- sketches_test[sample(1:nrow(sketches_test), 1), ] xm <- data.frame(gry=t(as.matrix(x[,1:784])),         x=rep(1:28, 28),         y=rep(28:1, rep(28, 28))) ggplot(xm, aes(x=x, y=y, fill=gry)) +   geom_tile() +   scale_fill_gradientn(colors = gray.colors(256, start = 0, end = 1, rev = TRUE )) +   theme_void() + theme(legend.position=\"none\")"},{"path":"https://dicook.github.io/mulgar/reference/sketches_train.html","id":null,"dir":"Reference","previous_headings":"","what":"Images of sketches for training — sketches_train","title":"Images of sketches for training — sketches_train","text":"data subset images https://quickdraw.withgoogle.com subset created using quickdraw R package https://huizezhang-sherry.github.io/quickdraw/. 6 different groups: banana, boomerang, cactus, flip flops, kangaroo. image 28x28 pixels. data used train classification model.","code":""},{"path":"https://dicook.github.io/mulgar/reference/sketches_train.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Images of sketches for training — sketches_train","text":"data frame 5998 rows 786 columns","code":""},{"path":"https://dicook.github.io/mulgar/reference/sketches_train.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Images of sketches for training — sketches_train","text":"V1-V784 grey scale 0-255 word person asked draw id unique id sketch","code":""},{"path":"https://dicook.github.io/mulgar/reference/sketches_train.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Images of sketches for training — sketches_train","text":"","code":"require(ggplot2) data(\"sketches_train\") x <- sketches_train[sample(1:nrow(sketches_train), 1), ] # print(x$word) xm <- data.frame(gry=t(as.matrix(x[,1:784])),         x=rep(1:28, 28),         y=rep(28:1, rep(28, 28))) ggplot(xm, aes(x=x, y=y, fill=gry)) +   geom_tile() +   scale_fill_gradientn(colors = gray.colors(256, start = 0, end = 1, rev = TRUE )) +   theme_void() + theme(legend.position=\"none\")"},{"path":"https://dicook.github.io/mulgar/reference/som_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Process the output from SOM to display the map and data — som_model","title":"Process the output from SOM to display the map and data — som_model","text":"function generates grid points match nodes self-organising map (SOM), jitters points data can seen relative grid. allows clustering points SOM inspected.","code":""},{"path":"https://dicook.github.io/mulgar/reference/som_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process the output from SOM to display the map and data — som_model","text":"","code":"som_model(x_som, j_val = 0.5)"},{"path":"https://dicook.github.io/mulgar/reference/som_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process the output from SOM to display the map and data — som_model","text":"x_som object returned kohonen::som j_val amount jitter, range 0-1, default 0.3","code":""},{"path":"https://dicook.github.io/mulgar/reference/som_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process the output from SOM to display the map and data — som_model","text":"data object contains original variables data map1, map2 location observations 2D som map, jittered distance distances observations closest node id row id data net object contains values nodes high-d space map1, map2 nodes som net distance distances observations closest node id row id net edges , specifying row ids net connect lines edges_s x, xend, y, yend segments draw lines form 2D map","code":""},{"path":"https://dicook.github.io/mulgar/reference/som_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process the output from SOM to display the map and data — som_model","text":"","code":"require(kohonen) #> Loading required package: kohonen #>  #> Attaching package: ‘kohonen’ #> The following object is masked from ‘package:mclust’: #>  #>     map data(clusters) c_grid <- kohonen::somgrid(xdim = 5, ydim = 5,   topo = 'rectangular') c_som <- kohonen::som(as.matrix(clusters[,1:5]), grid = c_grid) c_data_net <- som_model(c_som) require(ggplot2) ggplot() +   geom_segment(data=c_data_net$edges_s,     aes(x=x, xend=xend, y=y, yend=yend)) +   geom_point(data=c_data_net$data, aes(x=map1, y=map2),     colour=\"orange\", size=2, alpha=0.5)"},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-105","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.5","title":"mulgar 1.0.5","text":"CRAN release: 2025-04-07 simulated data copulas","code":""},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-104","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.4","title":"mulgar 1.0.4","text":"c1-c7 anomaly1-5 now documented properly","code":""},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-103","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.3","title":"mulgar 1.0.3","text":"additional data sets","code":""},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-102","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.2","title":"mulgar 1.0.2","text":"CRAN release: 2023-08-25 Fix is_tibble Added function make slice single projection Added choice number PCs ggscree Additional data sets","code":""},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-101","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.1","title":"mulgar 1.0.1","text":"CRAN release: 2023-06-22 Minimal changes requested CRAN.","code":""},{"path":"https://dicook.github.io/mulgar/news/index.html","id":"mulgar-100","dir":"Changelog","previous_headings":"","what":"mulgar 1.0.0","title":"mulgar 1.0.0","text":"Initial CRAN submission.","code":""}]
